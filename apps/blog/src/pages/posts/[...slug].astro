---
import type { AstroComponentFactory } from 'astro/runtime/server/index.js';
import { render } from 'astro:content';
import { getEntry } from 'astro:content';

import { BackButton } from '@/components/BackButton';
import PostJsonLd from '@/components/JsonLD/PostJsonLd.astro';
import { components } from '@/components/MDX';
import { MDXWrapper } from '@/components/MDXWrapper';
import { ThemeDropdown } from '@/components/Theme/ThemeDropdown';
import { Toc } from '@/components/Toc';
import BlogPost from '@/layouts/BlogPost.astro';
import DefaultLayout from '@/layouts/DefaultLayout.astro';
import { cn } from '@/lib/utils';
import type { CollectionData } from '@/service/mdx';
import { PostBuilder } from '@/service/mdx';

export async function getStaticPaths() {
  const document = await PostBuilder.getAll();

  const posts = [...document];

  return posts.map((post) => {
    const index = posts.findIndex((collection) => collection.id === post.id);

    return {
      params: { slug: post.data.slug },
      props: {
        post,
        prev: posts[index - 1],
        next: posts[index + 1]
      }
    };
  });
}

type Props = {
  post: CollectionData;
  prev: CollectionData;
  next: CollectionData;
  Content: AstroComponentFactory;
};

const { post, prev, next } = Astro.props;

const entry = await getEntry(post);

const { Content } = await render(entry);
---

<DefaultLayout
  seo={{
    title: `${post.data.title}`,
    description: post.data.description,
    image: post.data.image
  }}
>
  <BlogPost next={next} post={post} prev={prev}>
    <MDXWrapper>
      <Content components={components} />
    </MDXWrapper>
  </BlogPost>

  <aside
    class:list={cn(
      'fixed text-end text-sm',
      'top-24 max-h-[600px] max-w-[200px]',
      'hidden xl:block',
      'left-16 2xl:left-60'
    )}
    slot="side"
  >
    <div class="my-5">
      <BackButton client:only="react" />
      <ThemeDropdown client:only="react" />
    </div>

    <Toc client:load post={post} />
  </aside>
</DefaultLayout>
<PostJsonLd post={post} />
